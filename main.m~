clear 
clc
close all
databaseFolder = 'data';
csvfilePath = '/home/ambuj/Dropbox/MVF/DFT_MVF/CSV';
% [trainData, trainLables, testData, testLables] = loadDatabase('data');
[D, L,CarName] = loadDatabase(databaseFolder);
% [D, L] = loadPersonDatabase(databaseFolder);
n = unique(L(:,1));
windowSize = 15;
shift = 5;
sum = 0;
th = 0.5;
nitr  = 20;
noOfclass = 20;
index = 962;
sum1 = zeros(1,noOfclass);
for itr = 1:nitr
 for i = 1:size(n,1)
    loc = find(L == n(i));
    d = D(:,loc)';
    m = unique(d(:,index));
 for j = 1:size(m,1)
     loc1 = find(d(:,index) == m(j));
     T = d(loc1,1:(index-1))';
     [Mag,Pha] = computeDFT(T,windowSize,shift);
     lables{i,j} = n(i)*ones(size(Mag,2),1);
     fv{i,j} = Mag;
end
end
z = countnonempty(fv);
for i = 1:size(fv,1)
    if z(i)>3
    trainloc = randperm(z(i),3);
    testloc = setdiff(1:z(i),trainloc);
    else
    end
    for j = 1:size(trainloc,2)
        [data] = selectData(fv,i,trainloc(j));
        lables = i*ones(size(data,1),1);
        lables(:,2) = j*ones(size(data,1),1);
        if j == 1 && i == 1
            train_data = data ;
            lb_train = lables;
        else
            train_data = [train_data;data];
            lb_train = [lb_train;lables];
        end
        
    end
    for k = 1:size(testloc,2)
        [data] = selectData(fv,i,testloc(k));
        lables = i*ones(size(data,1),1);
        lbfiles = k*ones(size(data,1),1);
        if k == 1 && i == 1
            test_data = data ;
            lb_test = lables;
            lb_files = lbfiles;
        else
            test_data = [test_data;data];
            lb_test = [lb_test;lables];
            lb_files = [lb_files;lbfiles];
        end
        
    end
end
csvtrainData = [csvfilePath,'/Iteration-',int2str(itr),'-TrainData.csv'];
csvtrainlb = [csvfilePath,'/Iteration-',int2str(itr),'-Trainlb.csv'];
csvtestData = [csvfilePath,'/Iteration-',int2str(itr),'-TestData.csv'];
csvtestlb = [csvfilePath,'/Iteration-',int2str(itr),'-Testlb.csv'];
csvwrite(csvtrainData,train_data)
csvwrite(csvtrainlb,lb_train)
csvwrite(csvtestData,test_data)
csvwrite(csvtestlb,lb_test)
cd ..
cd('model')
disp('...............Training................')
[model] = trainmsvm(train_data,lb_train,'-m WW -k 1', 'mymsvm');
disp('...............Testing.................')
[labels, outputs] = predmsvm(model, test_data,lb_test);
Q(:,1) = labels;
Q(:,2) = lb_test;
Q(:,3) = lb_files;
[acc,classAcc] = accuracy(Q,th);
sum = sum + acc ;
sum1 = sum1 + classAcc;
clear labels lb_test lb_files testloc trainloc test_data train_data z outputs model loc loc1 data T Q Mag Pha  m lbfiles lb_train lables i j k fv d
end
disp('Average Accuracy over 20 Iteration is')
averageAcc = sum/nitr
avgClassAcc = sum1/nitr
%  disp('  ');
% 	disp('>>> Perform a 5-fold cross validation:');
%  	disp('         [cv_error, cv_labels] = kfold(5, X, Y, ''-m WW -k 1'')');
% 	disp('  ');	disp('  ');
%  	[cv_error, cv_labels] = kfold(5, X, Y, '-m WW -k 1');
%  	disp(sprintf('Cross-validation error = %f (should be around 0.2)\n',cv_error));
%  	disp('''cv_labels'' can be used to compute other statistics than the mean error.');
 	